spring.application.name=servicediscovery
server.port=8700

eureka.instance.hostname=172.20.10.73
#强制不注册到注册服务器
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.client.service-url.defaultZone=http://172.20.10.73:8700/eureka/

# 服务刷新时间配置，每隔这个时间会主动心跳一次
# 默认30s
eureka.instance.lease-renewal-interval-in-seconds=5
# 服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
# 注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
# 默认90s
eureka.instance.lease-expiration-duration-in-seconds=15

#自我保护机制打开
eureka.server.enable-self-preservation=false
#服务缓存最长时间
eureka.server.response-cache-update-interval-ms=2000
# 默认180s
# eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
# 由于启用了evict其实就用不太上改这个配置了
eureka.server.response-cache-auto-expiration-in-seconds=60
#5秒清理一次
eureka.server.eviction-interval-timer-in-ms=5000

logging.level.org.springframework=error
logging.level.eureka=error
logging.level.root=error